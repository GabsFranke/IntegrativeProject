stages:
  - test
  - build
  - container
  - deploy


jobs_desarrollo_tests_back:
  stage: test
  script: 
      - cd ./backend
      - pwd
      - echo "Maven test started"
      - mvn clean test
  only:
    - desarrollo 


jobs_desarrollo_container_back:
  image: 
    name: amazon/aws-cli:latest
    entrypoint: [""]
  stage: container
  variables: 
    DOCKER_REGISTRY: 145504712931.dkr.ecr.us-east-1.amazonaws.com 
    APP_NAME: g1-sixvago
  dependencies:
    - jobs_desarrollo_tests_back
  services:
    - docker:dind
  before_script:
    - cd ./backend
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $DOCKER_REGISTRY
  script: 
    - echo "Docker build started"
    - docker build -t $APP_NAME --build-arg USERNAME=${USERNAME} --build-arg PASSWORD=${PASSWORD} --build-arg SECRET_KEY=${SECRET_KEY} .
    - docker image ls
    - docker tag $APP_NAME:latest $DOCKER_REGISTRY/$APP_NAME:latest
    - docker image ls
    - docker push $DOCKER_REGISTRY/$APP_NAME:latest
  only:
    - desarrollo

test_job_postman:
  stage: test
  image: 
    name: postman/newman_alpine33    
    entrypoint: [""]
  script:
    - newman --version
    - npm config set unsafe-perm true
    - npm install -g newman-reporter-html 
    - newman run proyecto_integrador.postman_collection.json --globals usen_esto.postman_environment.json  --reporters cli,html,junit --reporter-html-export  report.html --reporter-junit-export  report.xml
  artifacts:
    when: always
    paths:
      - report.html
    reports:
      junit: report.xml
  when: manual
  only:
    - desarrollo

# jobs_tests_front:
#   image: node:16
#   stage: test
#   script: 
#     - cd ./Frontend
#     - npm install
#     - cd ./src
#     - pwd
#     - npm test
#   only:
#     - desarrollo 

jobs_build_front:
  image: node:16 #node:10
  stage: build  
  script:
    - cd ./Frontend
    - npm install
    - npm run build
  artifacts:
    when: always
    paths:
      - ./Frontend/build/
  only:
    - desarrollo


jobs_deploy_front_s3:
  image:
    name: amazon/aws-cli:latest
    entrypoint: [""]
  dependencies:
    - jobs_build_front
  stage: deploy
  script:
    - aws --version
    - aws s3 rm s3://$S3_BUCKET --recursive
    - aws s3 cp build s3://$S3_BUCKET --recursive
  when: manual
  only:
    - desarrollo
    